// Generated by CoffeeScript 1.12.7
(function() {

  /**
   * Waiting for dataLayer message from `js/content.s` and send it to `js/background.js`
   *
   * @param  {type} event Message event
   */
  var DataLayer, injectDataLayer, injectScript;
  DataLayer = {
    helperListener: function(event) {
      var e;
      if (event.data.type && event.data.type === 'dataLayer') {
        try {
          if (event.source === window) {
            chrome.runtime.sendMessage(event.data);
          } else {
            event.data.iframed = true;
            chrome.runtime.sendMessage(event.data);
          }
        } catch (error) {
          e = error;
        }
      }
    }
  };
  window.addEventListener('message', DataLayer.helperListener);

  /**
   * Inject internal script to available access to the `window`
   *
   * @param  {type} file_path Local path of the internal script.
   * @param  {type} tag The tag as string, where the script will be append (default: 'body').
   * @param  {type} callback The function to execute when the injected script is loaded.
   * @see    {@link http://stackoverflow.com/questions/20499994/access-window-variable-from-content-script}
   */
  injectScript = function(file_path, tag, callback) {
    var node, script;
    node = document.getElementsByTagName(tag)[0];
    script = document.createElement('script');
    script.setAttribute('type', 'text/javascript');
    script.setAttribute('src', file_path);
    script.addEventListener('load', callback);
    node.appendChild(script);
  };

  /**
   * Inject the DataLayer handler
   *
   * @param  {type} dataLayer The DataLayer name
   * @param  {type} tag The tag as string, where the script will be append (default: 'body').
   */
  injectDataLayer = function(dataLayer, tag) {
    var node, script;
    node = document.getElementsByTagName(tag)[0];
    script = document.createElement('script');
    script.setAttribute('type', 'text/javascript');
    script.innerHTML = 'new OPDataLayer("'.concat(dataLayer, '").handle();');
    node.appendChild(script);
  };

  /**
   * Inject `js/content.js` in the DOM
   * When is loaded inject the DataLayer handler
   */
  return injectScript(chrome.extension.getURL('js/content.js'), 'body', function() {
    return chrome.storage.local.get({
      datalayer_objects: ""
    }, function(stored) {
      var datalayer, datalayer_objects, i, len, results;
      if (stored.datalayer_objects.length) {
        datalayer_objects = stored.datalayer_objects.split(";");
        results = [];
        for (i = 0, len = datalayer_objects.length; i < len; i++) {
          datalayer = datalayer_objects[i];
          results.push(injectDataLayer(datalayer.trim(), 'body'));
        }
        return results;
      }
    });
  });
})();
