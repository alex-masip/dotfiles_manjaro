function adfProcess(e, a, i) {
    e.split("://")[0];
    if (-1 != e.indexOf("/serving/scripts/") || -1 != e.indexOf("/banners/scripts/st")) - 1 != e.indexOf("async") ? adfCreateRow("libraryId" + a, "Library: ", "Async", "libraries") : adfCreateRow("libraryId" + a, "Library: ", "Sync", "libraries");
    else if (-1 == e.indexOf("?pm=101056&id=7406650")) {
        if (-1 != e.indexOf("pm=")) {
            var n = e.split("pm=")[1].split("&")[0];
            adfCreateDiv("adfClient" + a, "", "adfClient", "main"), adfCreateRow("clientId" + a, "Tracking Setup ID: ", n, "adfClient" + a)
        }
        if (-1 != e.indexOf("lid=")) {
            e.split("lid=")[1].split("&")[0]
        }(-1 != i.indexOf("image") || i.indexOf("other")) && (e += "&ADFtpmode=2"), getTrackingIdAndContainerTag(e, a, i)
    }
}

function adfCreateDiv(e, a, i, n) {
    var t = document.createElement("div");
    t.id = e, t.textContent = a, t.setAttribute("class", i), document.getElementById(n).appendChild(t)
}

function adfCreateRow(e, a, i, n) {
    adfCreateDiv(e, "", "adfDiv", n), adfCreateDiv("", a, "adfBold", e), adfCreateDiv("", i, "adfValue", e)
}

function adfCreatePre(e, a, i) {
    var n = document.createElement("pre");
    n.textContent = e, n.setAttribute("class", a), document.getElementById(i).appendChild(n)
}

function adfDeleteDiv(e) {
    document.getElementById(e).remove();
    var a = document.createElement("div");
    a.id = e, document.body.appendChild(a)
}

function getTrackingIdAndContainerTag(e, a, i) {
    var n;
    n = window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP"), n.onreadystatechange = function () {
        4 == n.readyState && 200 == n.status && adfResponse(n.responseText, a, i, e)
    }, n.open("GET", e, !0), n.send()
}

function adfResponse(e, a, i, n) {
    if (-1 != e.indexOf("window.Adform.Tracking.TrackingPointName")) {
        var t = e.split('"')[1].split('"')[0];
        adfPageNameShow(t, a)
    }
    if (-1 != e.indexOf("window.Adform.Tracking.TrackingPointId")) {
        var r = e.split("=")[1].split(";")[0].replace(/\s{1,}/g, "");
        adfCreateRow("trackingId" + a, "Tracking Point ID: ", r, "adfClient" + a)
    } else if (-1 != e.indexOf("TrackingPointId")) {
        var r = e.split(":")[1].split("}")[0].replace(/\s{1,}/g, "");
        adfCreateRow("trackingId" + a, "Tracking Point ID: ", r, "adfClient" + a)
    } else adfCreateRow("trackingId" + a, "Tracking Point ID: ", "Tracking point is not created yet", "adfClient" + a);
    getTrackingPointType(i, a), -1 != i.indexOf("script") && (-1 != e.indexOf("Adform.Tracking.CreateIframeElement") ? adfCreateRow("containerId" + a, "Container Tag: ", "Yes (Iframe)", "adfClient" + a) : -1 != e.indexOf("try{") ? adfCreateRow("containerId" + a, "Container Tag: ", "Yes (JavaScript)", "adfClient" + a) : adfCreateRow("containerId" + a, "Container Tag: ", "No", "adfClient" + a)), -1 != i.indexOf("sub_frame") && adfCreateRow("containerId" + a, "Container Tag: ", "Yes (Iframe)", "adfClient" + a), getTrackingPointVariables(n, a)
}

function adfPageNameShow(e, a) {
    e = e.split("|");
    for (var i = e.pop();
        "" == i && e.length > 0;) i = e.pop();
    var n = e.join("|");
    "" != n && adfCreateRow("trackingPathId" + a, "Tracking Point Path: ", n, "adfClient" + a), adfCreateRow("trackingNameId" + a, "Tracking Point Name: ", i, "adfClient" + a)
}

function getTrackingPointType(e, a) {
    -1 != e.indexOf("script") ? adfCreateRow("trackingTypeId" + a, "Tracking Point Type: ", "Script", "adfClient" + a) : -1 != e.indexOf("other") || -1 != e.indexOf("image") ? adfCreateRow("trackingTypeId" + a, "Tracking Point Type: ", "Image", "adfClient" + a) : -1 != e.indexOf("sub_frame") && adfCreateRow("trackingTypeId" + a, "Tracking Point Type: ", "Iframe", "adfClient" + a)
}

function getTrackingPointVariables(e, a) {
    -1 != e.indexOf("itm=") && adfVars(e, "itm=", a), -1 != e.indexOf("ecpr=") && adfVars(e, "ecpr=", a)
}

function adfVars(e, a, i) {
    var n = e.split(a)[1].split("&")[0];
    if (-1 == n.indexOf("%")) {
        -1 != n.indexOf("-") && (n = n.replace(/-/g, "+")), -1 != n.indexOf("_") && (n = n.replace(/_/g, "+"));
        var t = JSON.stringify(JSON.parse(decodeURIComponent(escape(atob(n)))), null, 1);
        t = t.replace(/>/g, "").replace(/</g, "")
    } else var t = JSON.stringify(JSON.parse(decodeURIComponent(n).replace(/'/g, '"')), null, 1);
    adfCreateRow("trackingVarsId" + i, "Tracking Point Variables: ", "", "adfClient" + i), adfCreatePre(t, "adfVars", "adfClient" + i)
}
const background = chrome.extension.getBackgroundPage();
if ("undefined" != typeof background.adfheaders[0]) {
    adfDeleteDiv("libraries"), adfDeleteDiv("main");
    for (var i = 0; i < background.adfheaders.length; i++) {
        var adfUrl = background.adfheaders[i].split(";**")[0],
            adfType = background.adfheaders[i].split(";**")[1];
        adfProcess(adfUrl, i, adfType)
    }
}